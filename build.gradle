import org.apache.tools.ant.filters.*
import java.text.SimpleDateFormat

buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
	baseName=project.property("application.name")
	version=project.property("application.version")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

//dependencyManagement {
//	imports {
//		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5'
//	}
//}

dependencies {
	
	//compile('org.springframework.cloud:spring-cloud-starter-eureka-server')
	
	compile('org.springframework.boot:spring-boot-starter-web') 
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-log4j2")

	compile("com.google.code.gson:gson:2.8.0")
	compile("org.postgresql:postgresql")
	
	compile("commons-io:commons-io:2.5")

	configurations {
	    compile.exclude module: 'logback-classic'
	}

	    
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

processResources {
    
    filter ReplaceTokens, tokens: [
        "application.name": project.property("application.name"),
		"application.version": project.property("application.version"),
        "application.version.type": project.property("application.version.type"),
        "application.version.builddate": currentDateTimeFormatted()
    ]

}

def currentDateTimeFormatted() {

    SimpleDateFormat df = new SimpleDateFormat ("dd/MM/yyyy HH:mm:ss")
    return df.format (new Date())

}
