basePath: /collection-instrument-api/1.0.3
definitions:
  classifiers:
    properties:
      classifier: {example: '1731', type: string}
      classifierType:
        enum: [RU_REF, INDUSTRY, LEGAL_STATUS]
        example: RU_REF
        type: string
    required: [classifier, classifierType]
    type: object
  collectioninstrument:
    properties:
      ciType:
        default: OFFLINE
        enum: [ONLINE, OFFLINE]
        example: OFFLINE
        type: string
      classifiers: {$ref: '#/definitions/classifiers'}
      id: {default: 'urn:ons.gov.uk:id:ci:001.234.56789', example: 'urn:ons.gov.uk:id:ci:001.234.56789',
        format: urn, type: string}
      surveyId: {default: 'urn:ons.gov.uk:id:survey:001.234.56789', example: 'urn:ons.gov.uk:id:survey:001.234.56789',
        format: urn, type: string}
    required: [ciType, id, surveyId]
    type: object
  vnd.collection+json:
    properties:
      href: {example: /collectioninstrument/id/12345678, type: string}
      links:
        items: {$ref: '#/definitions/vnd.collectionjson_links'}
        type: array
      version: {example: '1.0', type: string}
    type: object
  vnd.collectionjson_links:
    properties:
      href: {example: /collectioninstrument/id/12345678, type: string}
      rel: {example: self, type: string}
      type: {example: application/vnd.ons.collectioninstrument+json, type: string}
host: 'localhost:8080

  '
info:
  contact: {email: ras@ons.gov.uk}
  description: Initial API for the Collection Instrument microservice.
  title: Collection Instrument API
  version: 1.0.3
paths:
  /activate/{id}:
    put:
      description: Mark all items in the batch as available
      operationId: activate_id_put
      parameters:
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: Batch was activated successfully}
        500: {description: Server was unable to complete the operation}
        501: {description: Batch is not in UPLOADING mode}
      summary: Activate batch
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /clear_batch/{id}:
    delete:
      description: Clear down a batch definition, useful for testing
      operationId: clear_batch_id_delete
      parameters:
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: File was completed successfully}
        500: {description: Server was unable to complete the operation}
        501: {description: Batch does not exist}
        502: {description: Generic error message}
      summary: Clear a batch
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /collectioninstrument:
    get:
      description: 'By passing in the appropriate options, you can search for available
        collection instruments

        '
      operationId: collectioninstrument_get
      parameters:
      - {description: pass an optional search string for looking up collection instruments
          based on classifier, in: query, name: searchString, required: false, type: string}
      - {description: number of records to skip for pagination, format: int32, in: query,
        minimum: 0, name: skip, required: false, type: integer}
      - {description: maximum number of records to return, format: int32, in: query,
        maximum: 50, minimum: 0, name: limit, required: false, type: integer}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: search results matching criteria}
        400: {description: bad input parameter}
      summary: searches collection instruments
      tags: [respondent]
      x-swagger-router-controller: swagger_server.controllers_local.respondent_controller
  /collectioninstrument/id/{id}:
    get:
      description: Returns a single collection instrument
      operationId: get_collection_instrument_by_id
      parameters:
      - {description: ID of collection instrument to return, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.ons.collectioninstrument+json]
      responses:
        200:
          description: Collection instrument representation
          headers:
            ETag: {description: 'The current ETag for the collection instrument, e.g.
                "5635635636356356"', type: string}
          schema: {$ref: '#/definitions/collectioninstrument'}
        400: {description: Invalid ID supplied}
        404: {description: Collection instrument not found}
      summary: Get a collection instrument by ID
      tags: [respondent]
      x-swagger-router-controller: swagger_server.controllers_local.respondent_controller
  /define_batch/{id}/{count}:
    post:
      description: Associate a service and ce with an item count
      operationId: define_batch_id_count_post
      parameters:
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      - {description: Number of items in batch, in: path, name: count, required: true,
        type: integer}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: File was completed successfully}
        500: {description: Server was unable to complete the operation}
      summary: Specify the size of a batch
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /download/{id}:
    get:
      consumes: [multipart/form-data]
      description: Download a file (test routine)
      operationId: download_id_get
      parameters:
      - {description: Respondent /Business identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: File was completed successfully}
        404: {description: RU_REF does not exist}
        500: {description: Server was unable to complete the operation}
      summary: Download a file based on the id (RU_REF)
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /download_csv/{id}:
    get:
      description: Download a list of live spreadsheets
      operationId: download_csv_id_get
      parameters:
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      responses:
        200:
          description: File was downloaded successfully
          schema: {type: file}
        500: {description: Server was unable to complete the operation}
      summary: Download CSV file
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /status/{id}:
    get:
      description: Return a count of items thus far and total in batch
      operationId: status_id_get
      parameters:
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: Status recovered successfully}
        204: {description: 'No content available, no batch reference'}
        500: {description: Server was unable to complete the operation}
      summary: Get upload status
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
  /survey_responses/{case_id}:
    post:
      consumes: [multipart/form-data]
      description: The survey response file with the case id as identifier
      operationId: survey_responses_case_id_post
      parameters:
      - {description: The file to upload, in: formData, name: file, required: false,
        type: file}
      - {description: Case id identifier, in: path, name: case_id, required: true,
        type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: File was uploaded successfully}
        500: {description: Server was unable to complete the operation}
      summary: Upload from the respondent
      tags: [respondent]
      x-swagger-router-controller: swagger_server.controllers_local.respondent_controller
  /upload/{id}/{file}:
    post:
      consumes: [multipart/form-data]
      description: Upload a custom spreadsheet and insert into encrypted DB column
      operationId: upload_id_file_post
      parameters:
      - {description: The file to upload, in: formData, name: files, required: false,
        type: file}
      - {description: Collection exercise identifier, in: path, name: id, required: true,
        type: string}
      - {description: File name, in: path, name: file, required: true, type: string}
      produces: [application/vnd.collection+json]
      responses:
        200: {description: File was completed successfully}
        500: {description: Server was unable to complete the operation}
        501: {description: Batch does not exist}
      summary: Upload collection instrument
      tags: [ciupload]
      x-swagger-router-controller: swagger_server.controllers_local.ciupload_controller
schemes: [https]
swagger: '2.0'
tags:
- {description: Operations available to collection exercise coordinators, name: cec}
- {description: Operations available to respondents, name: respondent}
- {description: Operations available to collection instruments upload, name: ciupload}
